{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "plugins": {
      "items": {
        "$ref": "#/definitions/Plugin"
      },
      "title": "Plugins",
      "type": "array"
    },
    "ports": {
      "items": {
        "oneOf": [
          {
            "$ref": "#/definitions/XILAPIMAPort"
          },
          {
            "$ref": "#/definitions/DSPACE_XILAPIECUPort"
          },
          {
            "$ref": "#/definitions/CustomPort"
          }
        ]
      },
      "title": "Ports",
      "description": "List of ports which are known by openta during test execution.",
      "type": "array"
    },
    "mappings": {
      "items": {
        "$ref": "#/definitions/Mapping"
      },
      "title": "Mappings",
      "type": "array"
    }
  },
  "required": [
    "ports",
    "mappings"
  ],
  "title": "openta Test Environment configuration file",
  "type": "object",
  "definitions": {
    "Port_CustomFactory": {
      "properties": {
        "type": {
          "title": "Type",
          "type": "string",
          "description": "The type of Port plugin. That named plugin type must be recognized by scanning the provided `plugins.folder`."
        }
      },
      "required": [
        "type"
      ],
      "title": "CustomFactory",
      "type": "object",
      "description": "Provide factory arguments to initially create the port."
    },
    "Port_CustomConfig": {
      "anyOf": [
        {
          "additionalProperties": true,
          "type": "object"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Config"
    },
    "Port_Name": {
      "title": "Type",
      "type": "string",
      "description": "Name (or id) of the port. The name has to be unique among ports in the test environment. The port name is e.g. used in mapping."
    },
    "Port_Order": {
      "title": "Order",
      "type": "integer",
      "description": "The setup and teardown order of the port. Smaller order is setup first. For tearing down the order is reversed."
    },
    "Port_TargetState": {
      "$ref": "#/definitions/PortState",
      "description": "The expected state of the port during startup. Can be any valid state.The test environment setup process ensures the port is in defined state before starting any tests."
    },
    "CustomPort": {
      "properties": {
        "type": {
          "const": "Custom",
          "title": "Type",
          "type": "string"
        },
        "name": { "$ref": "#/definitions/Port_Name"},
        "order": { "$ref": "#/definitions/Port_Order"},
        "target_state": { "$ref": "#/definitions/Port_TargetState"},
        "factory": {
          "$ref": "#/definitions/Port_CustomFactory"
        },
        "config": { "$ref": "#/definitions/Port_CustomConfig"}
      },
      "required": [
        "name",
        "order",
        "target_state",
        "type",
        "factory"
      ],
      "title": "CustomPort",
      "type": "object"
    },
    "DSPACE_XILAPIECUPort": {
      "properties": {
        "type": {
          "const": "XIL API dSPACE ECUPort",
          "title": "Type",
          "type": "string"
        },
        "name": { "$ref": "#/definitions/Port_Name"},
        "order": { "$ref": "#/definitions/Port_Order"},
        "target_state": { "$ref": "#/definitions/Port_TargetState"},
        "factory": {
          "$ref": "#/definitions/Port_XILAPIFactory"
        },
        "port_config_file": {
          "title": "Port Config File",
          "type": "string"
        },
        "loading_type": {
          "$ref": "#/definitions/LoadingType"
        }
      },
      "required": [
        "name",
        "order",
        "target_state",
        "type",
        "factory",
        "port_config_file",
        "loading_type"
      ],
      "title": "DSPACE_XILAPIECUPort",
      "type": "object"
    },
    "LoadingType": {
      "enum": [
        "eUPLOAD",
        "eDOWNLOAD"
      ],
      "title": "LoadingType",
      "description": "The XIL API `LoadingType` which must be provided to `StartOnlineCalibration`.",
      "type": "string"
    },
    "Plugin": {
      "properties": {
        "folder": {
          "title": "Folder",
          "description": "A folder containg one or more plugins for openta. Currently only custom Port implementations are discoverd and usable.",
          "type": "string"
        }
      },
      "required": [
        "folder"
      ],
      "title": "Plugin",
      "type": "object"
    },
    "Mapping": {
      "properties": {
        "file": {
          "title": "File",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "file",
        "type"
      ],
      "title": "Mapping",
      "type": "object"
    },
    "PortState": {
      "enum": [
        "RELEASED",
        "CREATED",
        "CONNECTED",
        "STARTED"
      ],
      "title": "PortState",
      "type": "string"
    },
    "Port_XILAPIFactory": {
      "properties": {
        "vendor_name": {
          "title": "Vendorname",
          "type": "string"
        },
        "product_name": {
          "title": "Productname",
          "type": "string"
        },
        "product_version": {
          "title": "Productversion",
          "type": "string"
        }
      },
      "required": [
        "vendor_name",
        "product_name",
        "product_version"
      ],
      "title": "XILAPIFactory",
      "type": "object",
      "description": "Provide the XIL API testbench factory arguments to initially create the port."
    },
    "XILAPIMAPort": {
      "properties": {
        "type": {
          "const": "XIL API MAPort",
          "title": "Type",
          "type": "string"
        },
        "name": { "$ref": "#/definitions/Port_Name"},
        "order": { "$ref": "#/definitions/Port_Order"},
        "target_state": { "$ref": "#/definitions/Port_TargetState"},
        "factory": {
          "$ref": "#/definitions/Port_XILAPIFactory"
        },
        "port_config_file": {
          "title": "Port Config File",
          "type": "string"
        },
        "force_config": {
          "title": "Force Config",
          "type": "boolean",
          "description": "The XIL API `ForceConfig` enum, which has to be provided for `Configure` the MAPort."
        }
      },
      "required": [
        "name",
        "order",
        "target_state",
        "factory",
        "port_config_file",
        "force_config"
      ],
      "title": "XILAPIMAPort",
      "type": "object"
    }
  }
}