"""Type stub file for OpenTASDK variables. DO NOT EDIT - GENERATED FILE."""

from typing import Any, Dict, Protocol, Union
import numpy as np
from openta.common.quantity import Quantity

class BatteryVoltageProtocol(Protocol):
    @property
    def value(self) -> float: ...
    @value.setter
    def value(self, val: Union[float, Quantity, Any]) -> None: ...
    @property
    def quantity(self) -> Quantity: ...
    def __str__(self) -> str: ...

class TurnSignalLeverProtocol(Protocol):
    @property
    def value(self) -> str: ...
    @value.setter
    def value(self, val: Union[str, Quantity, Any]) -> None: ...
    @property
    def quantity(self) -> Quantity: ...
    def __str__(self) -> str: ...

class WarningLightSwitchProtocol(Protocol):
    @property
    def value(self) -> str: ...
    @value.setter
    def value(self, val: Union[str, Quantity, Any]) -> None: ...
    @property
    def quantity(self) -> Quantity: ...
    def __str__(self) -> str: ...

class WarningLightIndicatorProtocol(Protocol):
    @property
    def value(self) -> str: ...
    @value.setter
    def value(self, val: Union[str, Quantity, Any]) -> None: ...
    @property
    def quantity(self) -> Quantity: ...
    def __str__(self) -> str: ...

class TurnSignalFrontLeftProtocol(Protocol):
    @property
    def value(self) -> str: ...
    @value.setter
    def value(self, val: Union[str, Quantity, Any]) -> None: ...
    @property
    def quantity(self) -> Quantity: ...
    def __str__(self) -> str: ...

class TurnSignalFrontRightProtocol(Protocol):
    @property
    def value(self) -> str: ...
    @value.setter
    def value(self, val: Union[str, Quantity, Any]) -> None: ...
    @property
    def quantity(self) -> Quantity: ...
    def __str__(self) -> str: ...

class TurnSignalRearLeftProtocol(Protocol):
    @property
    def value(self) -> str: ...
    @value.setter
    def value(self, val: Union[str, Quantity, Any]) -> None: ...
    @property
    def quantity(self) -> Quantity: ...
    def __str__(self) -> str: ...

class TurnSignalRearRightProtocol(Protocol):
    @property
    def value(self) -> str: ...
    @value.setter
    def value(self, val: Union[str, Quantity, Any]) -> None: ...
    @property
    def quantity(self) -> Quantity: ...
    def __str__(self) -> str: ...

class VariablesCollection:
    BatteryVoltage: BatteryVoltageProtocol
    TurnSignalLever: TurnSignalLeverProtocol
    WarningLightSwitch: WarningLightSwitchProtocol
    WarningLightIndicator: WarningLightIndicatorProtocol
    TurnSignalFrontLeft: TurnSignalFrontLeftProtocol
    TurnSignalFrontRight: TurnSignalFrontRightProtocol
    TurnSignalRearLeft: TurnSignalRearLeftProtocol
    TurnSignalRearRight: TurnSignalRearRightProtocol
    def __getitem__(self, key: str) -> Any: ...
    def __getattr__(self, key: str) -> Any: ...
    def __iter__(self) -> Any: ...
    def __len__(self) -> int: ...

