name: 'Start One-Time EC2 Linux Runner'
description: 'Start a self-hosted EC2 Linux Runner for one-time use'

inputs:
  aws-access-key-id:
    description: 'AWS Access Key ID'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key'
    required: true
  aws-region:
    description: 'AWS Region'
    required: true
  github-token:
    description: 'GitHub Personal Access Token'
    required: true
  ami-id:
    description: 'Linux AMI ID'
    required: true
  instance-type:
    description: 'EC2 Instance Type'
    required: true
  subnet-id:
    description: 'Subnet ID'
    required: true
  security-group-id:
    description: 'Security Group ID'
    required: true
  iam-instance-profile:
    description: 'IAM Instance Profile'
    required: true
  ebs-volume-size:
    description: 'EBS Volume Size in GB'
    required: true
  key-name:
    description: 'SSH Key Pair Name'
    required: true
  github-repository:
    description: 'GitHub Repository'
    required: true
  runner-labels:
    description: 'Labels for the GitHub runner'
    required: true

outputs:
  ec2-instance-id:
    description: 'ID of the created EC2 instance'
    value: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
  inputs-markdown:
    description: 'Markdown formatted input parameters'
    value: |
      ### ⚙️ Parameters for EC2 Linux Runner

      | Parameter | Value | Description |
      |-----------|-------|-------------|
      | aws-access-key-id | \`************\` | AWS Access Key ID |
      | aws-secret-access-key | \`************\` | AWS Secret Access Key |
      | aws-region | \`${{ inputs.aws-region }}\` | AWS Region |
      | github-token | \`************\` | GitHub Personal Access Token |
      | ami-id | \`${{ inputs.ami-id }}\` | Linux AMI ID |
      | instance-type | \`${{ inputs.instance-type }}\` | EC2 Instance Type |
      | subnet-id | \`${{ inputs.subnet-id }}\` | Subnet ID |
      | security-group-id | \`${{ inputs.security-group-id }}\` | Security Group ID |
      | iam-instance-profile | \`${{ inputs.iam-instance-profile }}\` | IAM Instance Profile |
      | ebs-volume-size | \`${{ inputs.ebs-volume-size }}\` | EBS Volume Size in GB |
      | key-name | \`${{ inputs.key-name }}\` | SSH Key Pair Name |
      | github-repository | \`${{ inputs.github-repository }}\` | GitHub Repository |
      | runner-labels | \`${{ inputs.runner-labels }}\` | Runner's Labels |

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Start EC2 runner
      id: start-ec2-runner
      shell: bash
      run: |
        # Get GitHub runner registration token
        TOKEN_RESPONSE=$(curl -sL \
          -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ inputs.github-token }}" \
          "https://api.github.com/repos/${{ inputs.github-repository }}/actions/runners/registration-token")
        REGISTRATION_TOKEN=$(echo $TOKEN_RESPONSE | jq -r .token)

        # Set runner label
        RUNNER_LABELS="${{ inputs.runner-labels }}"
        echo "RUNNER_LABELS=$RUNNER_LABELS" >> $GITHUB_ENV

        # Create user-data shell script
        USER_DATA=$(cat <<'EOF'
        #!/bin/bash
        
        # Start logging
        exec 1> >(tee -a /var/log/runner-setup.log) 2>&1

        # Create runner user and directory
        useradd -m runner
        RUNNER_DIR="/home/runner/actions-runner"
        mkdir -p $RUNNER_DIR
        cd $RUNNER_DIR

        # Setup GitHub Runner
        echo "Setting up GitHub Runner..."
        curl -O -L https://github.com/actions/runner/releases/download/v2.328.0/actions-runner-linux-x64-2.328.0.tar.gz
        # Extract the installer
        tar xzf ./actions-runner-linux-x64-2.328.0.tar.gz
        # Set ownership and permissions
        chown -R runner:runner .
        
        # Switch to runner user and configure/start runner
        echo "REG TOKEN = ${REGISTRATION_TOKEN}"
        su - runner -c "cd $RUNNER_DIR && \
        ./config.sh --url https://github.com/${{ inputs.github-repository }} --token ${REGISTRATION_TOKEN} --labels ${RUNNER_LABELS} --unattended --ephemeral && \
        ./run.sh"
        
        EOF
        )

        # Launch EC2 instance with user data
        INSTANCE_ID=$(aws ec2 run-instances \
          --image-id "${{ inputs.ami-id }}" \
          --instance-type "${{ inputs.instance-type }}" \
          --subnet-id "${{ inputs.subnet-id }}" \
          --security-group-ids ${{ inputs.security-group-id }} \
          --associate-public-ip-address \
          --iam-instance-profile "Name=${{ inputs.iam-instance-profile }}" \
          --block-device-mappings "[{\"DeviceName\":\"/dev/xvda\",\"Ebs\":{\"VolumeSize\":${{ inputs.ebs-volume-size }},\"VolumeType\":\"gp3\"}}]" \
          --tag-specifications "ResourceType=instance,Tags=[{Key=Name,Value=${RUNNER_LABELS}},{Key=GitHubRepository,Value=${{ inputs.github-repository }}}]" \
          --query 'Instances[0].InstanceId' \
          --instance-initiated-shutdown-behavior stop \
          --key-name "${{ inputs.key-name }}" \
          --user-data "${USER_DATA}" \
          --metadata-options "HttpTokens=required,HttpEndpoint=enabled" \
          --output text)

        # Set output
        echo "ec2-instance-id=${INSTANCE_ID}" >> $GITHUB_OUTPUT
