name: Brute Force Cross-Validation Dispatcher

on:
  workflow_dispatch:

permissions:
  actions: write # Required to call other workflows

jobs:
  brute-force-cross-validation:
    runs-on: ubuntu-latest
    strategy:
      # Add any additional parameters needed for your dSPACE job
      matrix:
        ami-id: ['ami-0cfdba0116ec18ad9'] # Windows with dSPACE ControlDesk
        instance-type: ['t3.large'] # recommended: t3.large or larger
        shutdown-behavior: ['terminate'] # or 'stop'
        ebs-volume-size: [500] # EBS volume size in GB
        failed-job-not-terminate: [true] # Do NOT terminate EC2 Instance when the job fails
        cdn-project-subpath:
          - "ControlDesk/ProjectA.ZIP"
          - "ControlDesk/CD_Traffic.ZIP"
        param1: [A, B]
        param2: [a, b]
      # Allow all combinations to run even if one fails
      fail-fast: false
    steps:
      - name: Call dSPACE Windows Runner
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'dspace-aws-on-demand-windows-runner.yaml',
              ref: context.ref,
              inputs: {
                'ami-id': '${{ matrix.ami-id }}',
                'instance-type': '${{ matrix.instance-type }}',
                'shutdown-behavior': '${{ matrix.shutdown-behavior }}',
                'ebs-volume-size': '${{ matrix.ebs-volume-size }}',
                'failed-job-not-terminate': '${{ matrix.failed-job-not-terminate }}',
                'key-nmae': 'vew',
                'cdn-project-subpath': '${{ matrix.cdn-project-subpath }}',
                'param1': '${{ matrix.param1 }}',
                'param2': '${{ matrix.param2 }}'
              }
            });
